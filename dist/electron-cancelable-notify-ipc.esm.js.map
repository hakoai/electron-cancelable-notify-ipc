{"version":3,"file":"electron-cancelable-notify-ipc.esm.js","sources":["../src/lib/main.ts","../src/lib/index.ts","../src/lib/renderer.ts","../src/index.ts"],"sourcesContent":["import { IpcMain } from 'electron';\nimport { IpcMainEvent } from 'electron/main';\nimport { Channels } from '.';\n\nexport function makeIpcMainFunctions(ipcMain: IpcMain) {\n  function handle(\n    channel: string,\n    listener: (\n      event: IpcMainEvent,\n      notify: (...args: unknown[]) => void,\n      cancel: Promise<unknown>,\n      ...args: unknown[]\n    ) => Promise<unknown[]>\n  ): void {\n    ipcMain.removeAllListeners(channel);\n    ipcMain.on(channel, (event, channels: Channels, ...args) => {\n      event.sender.send(channels.act);\n      const calcelPromise = new Promise(resolve => {\n        ipcMain.once(channels.cancel, (_, args) => {\n          resolve(args);\n        });\n      });\n      listener(\n        event,\n        (...args) => {\n          event.sender.send(channels.notify, ...args);\n        },\n        calcelPromise,\n        ...args\n      )\n        .then(res => {\n          event.sender.send(channels.responce, ...res);\n        })\n        .finally(() => {\n          ipcMain.removeAllListeners(channels.cancel);\n        });\n    });\n  }\n\n  function removeAllListeners(channel: string) {\n    ipcMain.removeAllListeners(channel);\n  }\n\n  return { handle, removeAllListeners };\n}\n","import { v1 } from 'uuid';\nexport interface Channels {\n  act: string;\n  notify: string;\n  cancel: string;\n  responce: string;\n}\n\nexport function makeChannel(channel: string): Channels {\n  const base = `${channel}-${v1()}`;\n  return {\n    act: `${base}-act`,\n    notify: `${base}-notify`,\n    cancel: `${base}-cancel`,\n    responce: `${base}-responce`,\n  };\n}\n","import { IpcRenderer } from 'electron';\nimport { makeChannel } from '.';\n\nexport function makeIpcRendererFunctions(ipcRenderer: IpcRenderer) {\n  function invokeWithTimeOut(\n    channel: string,\n    onNotify: (...args: unknown[]) => void,\n    timeout: number,\n    ...args: unknown[]\n  ): [(...args: unknown[]) => void, Promise<unknown[]>] {\n    const channels = makeChannel(channel);\n    return [\n      (...args: unknown[]) => {\n        ipcRenderer.send(channels.cancel, ...args);\n      },\n      new Promise((resolve, reject) => {\n        let act = false;\n        let done = false;\n\n        ipcRenderer.once(channels.act, () => (act = true));\n        ipcRenderer.on(channels.notify, (_, ...args) => {\n          onNotify(...args);\n        });\n        ipcRenderer.once(channels.responce, (_, ...args) => {\n          if (!done) {\n            done = true;\n            ipcRenderer.removeAllListeners(channels.act);\n            ipcRenderer.removeAllListeners(channels.notify);\n            resolve(args);\n          }\n        });\n\n        setTimeout(() => {\n          if (!act && !done) {\n            done = true;\n            ipcRenderer.removeAllListeners(channels.act);\n            ipcRenderer.removeAllListeners(channels.notify);\n            ipcRenderer.removeAllListeners(channels.responce);\n            reject(new Error('ipc timeout.'));\n          }\n        }, timeout);\n\n        ipcRenderer.send(channel, channels, ...args);\n      }),\n    ];\n  }\n\n  function invoke(\n    channel: string,\n    onNotify: (...args: unknown[]) => void,\n    ...args: unknown[]\n  ) {\n    return invokeWithTimeOut(channel, onNotify, 1000, ...args);\n  }\n\n  return { invokeWithTimeOut, invoke };\n}\n","import { makeIpcMainFunctions } from './lib/main';\nimport * as electron from 'electron';\nimport { makeIpcRendererFunctions } from './lib/renderer';\n\nexport const ipcMain = makeIpcMainFunctions(electron.ipcMain);\n\nexport const ipcRenderer = makeIpcRendererFunctions(electron.ipcRenderer);\n"],"names":["makeIpcMainFunctions","ipcMain","handle","channel","listener","removeAllListeners","on","event","channels","sender","send","act","calcelPromise","Promise","resolve","once","cancel","_","args","notify","then","res","responce","makeChannel","base","v1","makeIpcRendererFunctions","ipcRenderer","invokeWithTimeOut","onNotify","timeout","reject","done","setTimeout","Error","invoke","electron"],"mappings":"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"}