{"version":3,"file":"electron-cancelable-notify-ipc.cjs.development.js","sources":["../src/lib/main.ts","../src/lib/index.ts","../src/lib/renderer.ts","../src/index.ts"],"sourcesContent":["import { IpcMain } from 'electron';\nimport { IpcMainEvent } from 'electron/main';\nimport { Channels } from '.';\n\nexport function makeIpcMainFunctions(ipcMain: IpcMain) {\n  function handle(\n    channel: string,\n    listener: (\n      event: IpcMainEvent,\n      notify: (...args: unknown[]) => void,\n      cancel: Promise<unknown>,\n      ...args: unknown[]\n    ) => Promise<unknown[]>,\n    onError: (e: unknown) => void\n  ) {\n    ipcMain.removeAllListeners(channel);\n    ipcMain.on(channel, (event, channels: Channels, ...args) => {\n      event.sender.send(channels.act);\n      const calcelPromise = new Promise(resolve => {\n        ipcMain.once(channels.cancel, (_, args) => {\n          resolve(args);\n        });\n      });\n      try {\n        listener(\n          event,\n          (...args) => {\n            event.sender.send(channels.notify, ...args);\n          },\n          calcelPromise,\n          ...args\n        )\n          .then(res => {\n            event.sender.send(channels.responce, ...res);\n          })\n          .catch(e => {\n            event.sender.send(channels.error, e);\n            onError(e);\n          })\n          .finally(() => {\n            ipcMain.removeAllListeners(channels.cancel);\n          });\n      } catch (e) {\n        ipcMain.removeAllListeners(channels.cancel);\n        event.sender.send(channels.error, e);\n        onError(e);\n      }\n    });\n  }\n\n  function removeAllListeners(channel: string) {\n    ipcMain.removeAllListeners(channel);\n  }\n\n  return { handle, removeAllListeners };\n}\n","import { v1 } from 'uuid';\nexport interface Channels {\n  act: string;\n  notify: string;\n  cancel: string;\n  responce: string;\n  error: string;\n}\n\nexport function makeChannel(channel: string): Channels {\n  const base = `${channel}-${v1()}`;\n  return {\n    act: `${base}-act`,\n    notify: `${base}-notify`,\n    cancel: `${base}-cancel`,\n    responce: `${base}-responce`,\n    error: `${base}-error`,\n  };\n}\n","import { IpcRenderer } from 'electron';\nimport { makeChannel } from '.';\n\nexport function makeIpcRendererFunctions(ipcRenderer: IpcRenderer) {\n  function invokeWithTimeOut(\n    channel: string,\n    onNotify: (...args: unknown[]) => void,\n    timeout: number,\n    ...args: unknown[]\n  ): [(...args: unknown[]) => void, Promise<unknown[]>] {\n    const channels = makeChannel(channel);\n    return [\n      (...args: unknown[]) => {\n        ipcRenderer.send(channels.cancel, ...args);\n      },\n      new Promise((resolve, reject) => {\n        let act = false;\n        let done = false;\n\n        ipcRenderer.once(channels.act, () => (act = true));\n        ipcRenderer.on(channels.notify, (_, ...args) => {\n          onNotify(...args);\n        });\n\n        ipcRenderer.once(channels.responce, (_, ...args) => {\n          if (!done) {\n            done = true;\n            ipcRenderer.removeAllListeners(channels.act);\n            ipcRenderer.removeAllListeners(channels.notify);\n            ipcRenderer.removeAllListeners(channels.error);\n            resolve(args);\n          }\n        });\n\n        ipcRenderer.once(channels.error, (_, e) => {\n          if (!done) {\n            done = true;\n            ipcRenderer.removeAllListeners(channels.act);\n            ipcRenderer.removeAllListeners(channels.notify);\n            ipcRenderer.removeAllListeners(channels.responce);\n            reject(e);\n          }\n        });\n\n        setTimeout(() => {\n          if (!act && !done) {\n            done = true;\n            ipcRenderer.removeAllListeners(channels.act);\n            ipcRenderer.removeAllListeners(channels.notify);\n            ipcRenderer.removeAllListeners(channels.responce);\n            ipcRenderer.removeAllListeners(channels.error);\n            reject(new Error('ipc act timeout.'));\n          }\n        }, timeout);\n\n        ipcRenderer.send(channel, channels, ...args);\n      }),\n    ];\n  }\n\n  function invoke(\n    channel: string,\n    onNotify: (...args: unknown[]) => void,\n    ...args: unknown[]\n  ) {\n    return invokeWithTimeOut(channel, onNotify, 1000, ...args);\n  }\n\n  return { invokeWithTimeOut, invoke };\n}\n","import { makeIpcMainFunctions } from './lib/main';\nimport * as electron from 'electron';\nimport { makeIpcRendererFunctions } from './lib/renderer';\n\nexport const ipcMain = makeIpcMainFunctions(electron.ipcMain);\n\nexport const ipcRenderer = makeIpcRendererFunctions(electron.ipcRenderer);\n"],"names":["makeIpcMainFunctions","ipcMain","handle","channel","listener","onError","removeAllListeners","on","event","channels","sender","send","act","calcelPromise","Promise","resolve","once","cancel","_","args","notify","then","res","responce","e","error","makeChannel","base","v1","makeIpcRendererFunctions","ipcRenderer","invokeWithTimeOut","onNotify","timeout","reject","done","setTimeout","Error","invoke","electron"],"mappings":"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"}